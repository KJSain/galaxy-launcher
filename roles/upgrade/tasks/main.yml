---
# Copyright 2017 Sequencing Analysis Support Core - Leiden University Medical Center
# Contact us at: sasc@lumc.nl
#
# This file is part of galaxy-docker-ansible.
# A dual licensing mode is applied.
# The source code within this project is freely available for non-commercial use under the GNU Affero General Public license.
# For commercial users or users who do not want to follow the AGPL, please contact us to obtain a separate license.
#
# You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.

- name: Setting new docker container for the test upgrade. 
  set_fact:
    docker_container_name: "{{test_upgrade.docker_container_name}}"
  when: test

- name: Remove docker container before migrating
  docker_container:
    name: "{{docker_container_name}}"
    state: absent
    keep_volumes: yes

- name: moving to another export folder for testing
  include: test.yml
  when: test

- name: delete .distribution_config folder
  file:
    path: "{{docker_export_location}}/.distribution_config"
    state: absent
  when: not test

- name: Start docker container
  docker_container:
    volumes: "{{docker_export_location}}:/export/"
    image: "{{docker_image}}"
    name: "{{docker_container_name}}"
    state: started
    command: "/usr/bin/startup"
    detach: True

#- name: create default galaxy folders
#  docker_container:
#    volumes: "{{docker_export_location}}:/export/"
#    image: "{{docker_image}}"
#    name: "{{docker_container_name}}"
#    state: started
#    command: "python /usr/local/bin/export_user_files.py $PG_DATA_DIR_DEFAULT"

- name: get galaxy central location from docker container
  command: "docker exec {{name}} {{command}}"
  vars:
    volumes: "{{docker_export_location}}:/export/"
    image: "{{docker_image}}"
    name: "{{docker_container_name}}"
    state: started
    command: "bash -c 'echo \"$GALAXY_ROOT\"'"
  register: output

- name: register galaxy root
  set_fact:
    galaxy_root: "{{output.stdout_lines[-1]}}"

- name: show galaxy_root
  debug: 
    var: galaxy_root
    verbosity: 1

- name: Check if postgres is online
  command: "docker exec {{docker_container_name}} service postgresql status"
  register: result
  until: '"online" in result.stdout'
  retries: 20

- name: upgrade the database on the export location
  command: "docker exec {{name}} {{command}}"
  vars: 
    volumes: "{{docker_export_location}}:/export/"
    image: "{{docker_image}}"
    name: "{{docker_container_name}}"
    state: started
    command: "sh {{galaxy_root}}/manage_db.sh upgrade"
  register: migration_result

- name: show migration results
  debug:
    var: migration_result.stdout
    verbosity: 0

- name: Stop docker container
  docker_container:
    name: "{{docker_container_name}}"
    state: stopped

- name: Overwrite old config files?
  set_fact:
    no_overwrite: ""
  when: overwrite_config_files

- name: Add new config files
  command: "cp -p -r {{no_overwrite}} {{src}} {{dest}}"
  vars:
    src: "{{docker_export_location}}/{{item.src}}"
    dest: "{{docker_export_location}}/{{item.dest}}"
  with_items:
    - "{{new_config_files}}"

