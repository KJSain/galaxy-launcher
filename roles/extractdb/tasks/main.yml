---
# Copyright 2017 Sequencing Analysis Support Core - Leiden University Medical Center
# Contact us at: sasc@lumc.nl
#
# This file is part of galaxy-docker-ansible.
# A dual licensing mode is applied.
# The source code within this project is freely available for non-commercial use under the GNU Affero General Public license.
# For commercial users or users who do not want to follow the AGPL, please contact us to obtain a separate license.
#
# You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.

# tasks file for extractdb

- name: Make sure the docker container is started
  docker_container:
    name: "{{docker_container_name}}"
    volumes: "{{docker_export_location}}:/export/"
    image: "{{docker_image}}"
    state: started

- name: Create empty dump file on server
  file:
    path: "{{docker_export_location}}/{{exported_db_file}}"
    mode: 0600
    owner: "{{container_postgres_user}}"
    group: "{{container_postgres_user}}" 
    state: "{{item}}"
  with_items:
    - absent
    - touch

- name: Check if postgres is online
  command: "docker exec {{docker_container_name}} service postgresql status"
  register: result
  until: '"online" in result.stdout'
  retries: 20

- name: Dump database in export folder
  command: "docker exec -u {{user}} {{name}} {{command}}"
  vars:
    name: "{{docker_container_name}}"
    command: "pg_dump {{container_database_name}} -f /export/{{exported_db_file}}"
    user: "{{container_postgres_user}}"
  register: output
  ignore_errors: true


#- name: Copy exported db to ansible host
#  fetch:
#    dest: "{{fetch_location}}"
#    flat: True
#    src: "{{docker_export_location}}/{{exported_db_file}}"

- name: rsync exported db to ansible host
  synchronize:
    perms: yes #file should not be world readable
    compress: yes
    dest: "{{fetch_location}}"
    src: "{{docker_export_location}}/{{exported_db_file}}"
    mode: pull
  vars:
    ansible_ssh_pipelining: False
    
- name: Delete dump file on server
  file:
    path: "{{docker_export_location}}/{{exported_db_file}}"
    state: absent

