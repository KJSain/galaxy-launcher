---
# Copyright 2017 Sequencing Analysis Support Core - Leiden University Medical Center
# Contact us at: sasc@lumc.nl
#
# This file is part of galaxy-docker-ansible.
# A dual licensing mode is applied.
# The source code within this project is freely available for non-commercial use under the GNU Affero General Public license.
# For commercial users or users who do not want to follow the AGPL, please contact us to obtain a separate license.
#
# You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.

# tasks file for nginxsettings
# This sets a nginx settings file. Currently only one galaxy instance and one test upgrade instance is supported.
# To install multiple galaxies in the same vm this needs to be changed.

- name: set nginx settings
  set_fact:
    nginx_sites:
      galaxy:
        - "listen {{ public_galaxy_web_port }}"
        - "server_name {{ galaxy_web_urls | join(' ') }}"
        - "location / { proxy_pass http://galaxy; }"
        - "client_max_body_size {{max_upload_size}}"
    nginx_configs:
      upstream:
        - "upstream galaxy { server localhost:{{galaxy_web_port}}; }"
      proxy:
        - "proxy_set_header X-Real-IP $remote_addr"
        - "proxy_set_header X-Forwarded-Host $host"
        - "proxy_set_header X-Forwarded-Server $host"
        - "proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for"
        - "proxy_set_header Host $http_host"
    nginx_http_params:
        #- "include       mime.types"
        #- "default_type  application/octet-stream"
        - "sendfile      on"
        - "keepalive_timeout 12"
        - "types_hash_max_size 2048"
        - "gzip on"
        - "gzip_vary on"
        - "gzip_proxied any"
        - "gzip_comp_level 6"
        - "gzip_buffers 16 8k"
        - "gzip_http_version 1.1"
        - "gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript"
        - "uwsgi_read_timeout 300"

- name: Add test upgrade profile.
  set_fact:
    nginx_sites_test_upgrade:
      test_upgrade_galaxy:
        - "listen {{test_upgrade_settings.public_galaxy_web_port }}"
        - "server_name {{ galaxy_web_urls | join(' ') }}"
        - "location / { proxy_pass http://test_upgrade_galaxy; }"
        - "client_max_body_size {{max_upload_size}}"
    nginx_configs_test_upgrade:
      upstream:
        - "{{nginx_configs.upstream[0]}}"
        - "upstream test_upgrade_galaxy { server localhost:{{test_upgrade_settings.galaxy_web_port}}; }"
  when: test_upgrade

- name: combine test upgrade profile with regular galaxy profile
  set_fact:
    nginx_sites: "{{ nginx_sites | combine(nginx_sites_test_upgrade)}}"
    nginx_configs: "{{ nginx_configs | combine(nginx_configs_test_upgrade) }}"
  when: test_upgrade

- name: show variables
  debug:
    var: "{{item}}"
    verbosity: 1
  with_items:
    - nginx_sites
    - nginx_configs
    - nginx_http_params

- name: check whether SE_linux is disabled
  set_fact:
    ansible_selinux: False
  when: ansible_selinux.status == 'disabled'

- name: show se linux
  debug:
    var: ansible_selinux
    verbosity: 1

- name: install prerequisites for SElinux RedHat families
  yum:
    pkg: "{{item}}"
    state: latest
  with_items:
    - libselinux-python
    - libsemanage-python
  when: 
    - ansible_selinux
    - ansible_os_family == 'RedHat'

- name: install prerequisites for SElinux Debian families
  apt:
    pkg: "{{item}}"
    state: latest
  with_items:
    - python-selinux
    - libsemanage-common
    - python-semanage
  when: 
    - ansible_os_family == 'Debian'
    - ansible_selinux

- name: Set SE boolean so nginx will work.
  when: ansible_selinux
  seboolean:
    name: httpd_can_network_connect
    persistent: yes
    state: yes
