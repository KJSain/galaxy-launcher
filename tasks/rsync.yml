---
# Copyright 2017 Sequencing Analysis Support Core - Leiden University Medical Center
# Contact us at: sasc@lumc.nl
#
# This file is part of galaxy-docker-ansible.
# A dual licensing mode is applied.
# The source code within this project is freely available for non-commercial use under the GNU Affero General Public license.
# For commercial users or users who do not want to follow the AGPL, please contact us to obtain a separate license.
#
# You should have received a copy of the GNU Affero General Public License along with this program. If not, see <http://www.gnu.org/licenses/>.

# A list of tasks that sets up the backup user to rsync the backups to a remote host

- name: create rsync script
  template:
    src: "rsyncscript.sh.j2"
    dest: "{{backup_location}}/scripts/rsyncscript.sh"
    owner: "{{backup_user}}"
    group: "{{backup_user}}"
    mode: 0700
  vars:
    src: "{{backup_location}}"
    host: "{{item.host}}"
    dest: "{{item.dest}}"
    user: "{{item.user |default('')}}"
    compression_level: "{{item.compression_level}}"
    delete: "{{item.delete}}"
  with_items:
    - "{{backup_galaxy_rsync_settings}}"

- name: copy public key of backup user to ansible host
  fetch:
    dest: "{{ssh_dir}}/{{backup_user}}_public-key/id_rsa.pub"
    flat: yes
    src: "/home/{{backup_user}}/{{backup_ssh_key_file}}.pub"
    validate_checksum: yes

- name: Delete known_hosts file # To prevent double hashing if host is already present in hosts file
  become_user: "{{backup_user}}"
  file:
    path: "~/.ssh/known_hosts"
    state: absent

# This module can be used from ansible 2.3 onwards with hash_host
- name: Add remote backup server to the known_hosts file
  known_hosts:
    name: "{{backup_galaxy_rsync_settings.host}}"
    state: present
    key: "{{lookup('file','{{ssh_dir}}/{{backup_galaxy_rsync_settings.host}}/public_key')}}"
#    hash_host: True
  become_user: "{{backup_user}}"

- name: Hash known_hosts file.
  become_user: "{{backup_user}}"
  command: "ssh-keygen -Hf {{known_hosts}}"
  vars:
    known_hosts: "~/.ssh/known_hosts"

- name: Delete known_hosts.old file
  become_user: "{{backup_user}}"
  file:
    path: "~/.ssh/known_hosts.old"
    state: absent

- name: Set job in cron to rsync backups to a remote location
  cron:
    job: "bash {{backup_location}}/scripts/rsyncscript.sh >> {{backup_location}}/logs/rsync.log 2>&1"
    state: present
    user: "{{backup_user}}"
    backup: yes
    name: "Rsync to the backup host"
    month: "{{item.cron.month | default(omit) }}"
    day: "{{item.cron.day | default(omit) }}"
    weekday: "{{item.cron.weekday | default(omit)}}"
    hour: "{{item.cron.hour | default(omit)}}"
    minute: "{{item.cron.minute | default(omit)}}"
    special_time: "{{item.cron.special_time | default(omit)}}"
  with_items:
    - "{{backup_galaxy_rsync_settings}}"



